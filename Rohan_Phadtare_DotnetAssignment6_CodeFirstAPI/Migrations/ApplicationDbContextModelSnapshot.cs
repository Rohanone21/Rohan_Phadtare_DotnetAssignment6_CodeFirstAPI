// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rohan_Phadtare_DotnetAssignment6_CodeFirstAPI;

#nullable disable

namespace Rohan_Phadtare_DotnetAssignment6_CodeFirstAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rohan_Phadtare_DotnetAssignment6_CodeFirstAPI.Models.Peripheral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Peripherals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedDate = new DateTime(2024, 1, 15, 10, 30, 0, 0, DateTimeKind.Utc),
                            Category = "Keyboard",
                            Name = "Mechanical Keyboard RGB",
                            Price = 89.99m,
                            QuantityInStock = 15
                        },
                        new
                        {
                            Id = 2,
                            AddedDate = new DateTime(2024, 1, 20, 14, 15, 0, 0, DateTimeKind.Utc),
                            Category = "Mouse",
                            Name = "Wireless Gaming Mouse",
                            Price = 49.99m,
                            QuantityInStock = 25
                        },
                        new
                        {
                            Id = 3,
                            AddedDate = new DateTime(2024, 1, 23, 9, 0, 0, 0, DateTimeKind.Utc),
                            Category = "Monitor",
                            Name = "27-inch 4K Monitor",
                            Price = 299.99m,
                            QuantityInStock = 8
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
